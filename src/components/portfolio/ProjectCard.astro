---
import type { CollectionEntry } from "astro:content";
type ProyectoEntry = CollectionEntry<"portfolio">;

// 1. Definir tipo de props
interface Props {
  proyecto: ProyectoEntry;
}

// 2. Hacer casting al tipo correcto
const { proyecto } = Astro.props as Props;

const { 
  nombre: title,
  categoria: category,
  descripcion_corta: shortDescription,
  imagen_principal: image,
  fecha,
  tecnologias = [],
  disponible
} = proyecto.data;

const slug = proyecto.id;
---
<a 
  href={`/portfolio/${slug}`} 
  class="group block overflow-hidden rounded-xl bg-gray-800 border border-gray-700 hover:border-blue-500 transition-all duration-300"
>
  <div class="aspect-video overflow-hidden">
    <img 
      src={image} 
      alt={title}
      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      loading="lazy"
    />
  </div>
  
  <div class="p-6">
    <div class="flex justify-between items-start mb-3">
      <h3 class="text-xl font-bold text-white group-hover:text-blue-400 transition-colors">{title}</h3>
      {disponible && (
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-900 text-green-200">
          En l√≠nea
        </span>
      )}
    </div>
    
    <p class="text-blue-400 font-medium mb-3">{category}</p>
    <p class="text-gray-300 mb-4">{shortDescription}</p>
    
    <div class="flex flex-wrap gap-2">
      {tecnologias.slice(0, 3).map((tech: string) => (
        <span class="px-2 py-1 bg-gray-700/50 text-gray-300 text-xs rounded">
          {tech}
        </span>
      ))}
    </div>
    
    <div class="mt-4 text-sm text-gray-400">
      {fecha && new Date(fecha).toLocaleDateString('es-ES', { year: 'numeric', month: 'long' })}
    </div>
  </div>
</a>